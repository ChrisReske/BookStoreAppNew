@page "/authors/"
@inject IClient httpClient
<h3>Index</h3>

if(Authors == null)
{
    <div class="altert alert-info">
        <h4>Loading data ...</h4>
    </div>
} 
else
{
<a class="btn btn-dark" href="/authors/create"><span class="oi oi-plus" aria-hidden="true"></span>Create</a>
<br/>

<table class="table table-responsive">
    <thead>
    <tr>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Action</th>
    </tr>
    </thead>
    <tbody>
        @foreach (var author in Authors)
        {
            <tr>
                <td>@author.FirstName</td>
                <td>@author.LastName</td>
                <td>
                    <a class="btn btn-primary" href="/authors/details"><span class="oi oi-book" aria-hidden="true"></span>Details</a>
                    <a class="btn btn-warning" href="/authors/edit"><span class="oi oi-pencil" aria-hidden="true"></span>Edit</a>
                    <a class="btn btn-danger" href="/authors/Delete"><span class="oi oi-delete" aria-hidden="true"></span>Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
}

@code {
    private List<AuthorReadOnlyDto> Authors;

    protected override async Task OnInitializedAsync()
    {
        Authors = (await httpClient.AuthorsAllAsync()).ToList();
    }
}
